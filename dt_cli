#!/bin/bash

if [[ $(id -u) != 0 ]]; then
	clear
    whiptail --title "错误信息" --msgbox "请在root用户下执行" 8 78 
	exit 1
fi

if [[ $(uname -m 2> /dev/null) != x86_64 ]]; then
	clear
    whiptail --title "错误信息" --msgbox "请在64位系统下运行此脚本" 8 78 
	exit 1
fi

#操作系统判断
osdist(){

    set -e
    if cat /etc/*release | grep ^NAME | grep -q Debian; then

        dist=debian
        apt-get update -q
        export DEBIAN_FRONTEND=noninteractive
        apt-get install whiptail curl locales lsb-release jq dnsutils lsof -y -qq

    else
        clear
        whiptail --title "错误信息" --msgbox "本脚本只能在debian10下运行" 8 78     
        exit 1; 
    fi
}

dt_system_dep(){

rm -rf /etc/apt/sources.list.d/*
cat << EOF > /etc/apt/sources.list
deb http://mirrors.aliyun.com/debian $(cat /etc/os-release | grep VERSION= | cut -d '(' -f2 | cut -d ')' -f1) main
deb http://mirrors.aliyun.com/debian-security $(cat /etc/os-release | grep VERSION= | cut -d '(' -f2 | cut -d ')' -f1)/updates main
deb http://mirrors.aliyun.com/debian $(cat /etc/os-release | grep VERSION= | cut -d '(' -f2 | cut -d ')' -f1)-updates main
EOF

groupadd clash
useradd -g clash -d /home/clash -s /bin/bash -m clash

echo clash | sudo passwd clash --stdin  &>/dev/null

apt update

echo iptables-persistent iptables-persistent/autosave_v4 boolean true | debconf-set-selections
echo iptables-persistent iptables-persistent/autosave_v6 boolean true | debconf-set-selections

yes|apt -y install sudo supervisor iptables-persistent net-tools curl gzip unzip

source /etc/profile

echo "clash  ALL=(ALL:ALL) ALL" >> /etc/sudoers

cat << EOF > /etc/sysctl.conf

net.ipv4.ip_forward=1
fs.file-max = 999999

net.core.rmem_max = 67108864
net.core.wmem_max = 67108864
net.core.rmem_default = 6291456
net.core.wmem_default = 6291456
net.core.netdev_max_backlog = 65535
net.core.somaxconn = 262114

net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_fin_timeout = 30
net.ipv4.tcp_keepalive_time = 1200
net.ipv4.tcp_max_syn_backlog = 8192
net.ipv4.tcp_max_tw_buckets = 5000
net.ipv4.tcp_mem = 8192 131072 67108864
net.ipv4.tcp_rmem = 10240 87380 12582912
net.ipv4.tcp_wmem = 10240 87380 12582912
net.ipv4.tcp_mtu_probing = 1
net.ipv4.tcp_notsent_lowat = 16384
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_max_orphans= 262114
net.ipv4.tcp_fastopen = 3

net.ipv4.ip_local_port_range = 1024 65000

net.ipv4.udp_mem = 8192 131072 67108864
net.ipv4.udp_rmem_min = 4096
net.ipv4.udp_wmem_min = 4096
net.core.default_qdisc = fq
net.ipv4.tcp_congestion_control = bbr
EOF

sysctl -p
}

#trojan
dt_input_trojan(){
while [[ -z ${loc_ip} ]]; do
    loc_ip=$(whiptail --inputbox --nocancel "输入本机IP（现在安装灯塔客户端机器的ip）" 8 78 --title "输入域名" 3>&1 1>&2 2>&3)
done

# while [[ -z ${gate_ip} ]]; do
#     gate_ip=$(whiptail --inputbox --nocancel "输入网关IP（输入网关IP（ros的ip或者爱快ip）" 8 78 --title "输入域名" 3>&1 1>&2 2>&3)
# done

gate_ip=$(route -n | grep $ETH_N | grep UG | awk '{print $2}')

# while [[ -z ${svr_domain} ]]; do
#     svr_domain=$(whiptail --inputbox --nocancel "灯塔VPS域名" 8 78 --title "输入域名：（可以用公益节点来安装:bwg.ps9.win）" 3>&1 1>&2 2>&3)
# done

svr_domain="bwg.ps9.win"

# while [[ -z ${svr_pwd} ]]; do
#     svr_pwd=$(whiptail --inputbox --nocancel "灯塔VPS密码" 8 78 --title "输入密码：（可以用公益节点密码：qwer4321）" 3>&1 1>&2 2>&3)
# done

svr_pwd="qwer4321"
}


#v2ray
dt_input_v2ray(){
while [[ -z ${loc_ip} ]]; do
    loc_ip=$(whiptail --inputbox --nocancel "输入本机IP（现在安装灯塔客户端机器的ip）" 8 78 --title "输入域名" 3>&1 1>&2 2>&3)
done

while [[ -z ${gate_ip} ]]; do
    gate_ip=$(whiptail --inputbox --nocancel "输入网关IP（输入网关IP（ros的ip或者爱快ip）" 8 78 --title "输入域名" 3>&1 1>&2 2>&3)
done

while [[ -z ${svr_domain} ]]; do
    svr_domain=$(whiptail --inputbox --nocancel "V2ray VPS域名" 8 78 --title "输入域名" 3>&1 1>&2 2>&3)
done

while [[ -z ${svr_port} ]]; do
    svr_port=$(whiptail --inputbox --nocancel "V2ray VPS端口" 8 78 --title "输入端口" 3>&1 1>&2 2>&3)
done

while [[ -z ${svr_uuid} ]]; do
    svr_uuid=$(whiptail --inputbox --nocancel "V2ray VPS的UUID" 8 78 --title "输入UUID" 3>&1 1>&2 2>&3)
done

while [[ -z ${svr_alterid} ]]; do
    svr_alterid=$(whiptail --inputbox --nocancel "V2ray VPS的alterid" 8 78 --title "输入alterid" 3>&1 1>&2 2>&3)
done

while [[ -z ${svr_path} ]]; do
    svr_path=$(whiptail --inputbox --nocancel "V2ray VPS的path" 8 78 --title "输入path" 3>&1 1>&2 2>&3)
done

}


dt_smartdns(){

wget --no-check-certificate -O /opt/smartdns.deb $SM

cd /opt
dpkg -i smartdns.deb

cat << EOF > /etc/smartdns/smartdns.conf
bind :55
bind :56 -no-speed-check -group GFW -no-rule-addr
speed-check-mode tcp:443,tcp:80,ping
cache-size 5200
rr-ttl 600
rr-ttl-min 60
rr-ttl-max 600
prefetch-domain yes
force-AAAA-SOA yes
serve-expired yes
serve-expired-ttl 0
log-level error
log-file /var/log/smartdns.log
log-size 2048k
log-num 2
conf-file /etc/smartdns/gfw_domain.conf

server 119.28.28.28
server 223.5.5.5
server 223.6.6.6 
server-tls dns.rubyfish.cn:853
server-tcp 8.8.8.8 -group GFW -exclude-default-group
server-tcp 8.8.4.4 -group GFW -exclude-default-group
server-tls dns.rubyfish.cn:853 -group GFW -exclude-default-group 
EOF

rm -rf /opt/smartdns.deb

cd /etc/smartdns/

wget --no-check-certificate $GFW_LIST

cd 

systemctl enable smartdns
systemctl start smartdns > /dev/null 2>&1

}

#trojan
dt_clash_trojan(){

wget --no-check-certificate -O /opt/clash.gz $CLS
cd /opt

gzip -d clash.gz
mv clash /usr/local/bin/clash
chmod +x /usr/local/bin/clash
# 为 clash 添加绑定低位端口的权限，这样运行 clash 的时候无需 root 权限
setcap cap_net_bind_service=+ep /usr/local/bin/clash

mkdir -p /home/clash/.config/clash

cat << EOF > /home/clash/.config/clash/config.yaml
port: 7890
socks-port: 7891
redir-port: 7892
allow-lan: true
mode: Rule
log-level: info
external-controller: 0.0.0.0:9090
dns:
  enable: true
  listen: 0.0.0.0:53
  enhanced-mode: redir-host
  nameserver:
    - 127.0.0.1:55
  fallback:
    - 127.0.0.1:56
secret: miyue
external-ui: dashboard
Proxy:
  - {name: $svr_domain, server: $svr_domain, port: 443, type: trojan, password: $svr_pwd, skip-cert-verify:true}
Proxy Group:
  - name: ♻️ 自动选择
    type: url-test
    url: http://www.gstatic.com/generate_204
    interval: 300
    proxies:
      - $svr_domain
  - name: 🐟 漏网之鱼
    type: select
    proxies:
      - ♻️ 自动选择
      - $svr_domain
Rule:
 - MATCH,🐟 漏网之鱼
EOF

cd /home/clash/.config/clash

wget --no-check-certificate $MMDB

mkdir dashboard

wget --no-check-certificate $DASH

unzip clash-dashboard-gh-pages.zip

mv clash-dashboard-gh-pages/* dashboard/

chown -R clash /home/clash/.config/

chmod +x /home/clash/.config/clash/Country.mmdb

cat << EOF > /lib/systemd/system/clash@.service
[Unit]
Description=A rule based proxy in Go for %i.
After=network.target

[Service]
Type=simple
User=%i
Restart=on-abort
ExecStart=/usr/local/bin/clash

[Install]
WantedBy=multi-user.target
EOF


systemctl daemon-reload

systemctl enable clash@clash

systemctl start clash@clash > /dev/null 2>&1

sleep 5
}


dt_iptables(){

temp_ip=(${loc_ip//./ })

jy_ip=${temp_ip[0]}"."${temp_ip[1]}".0.0"

iptables -t nat -N clash
echo "1******************************************************************"
iptables -t nat -N clash_dns
echo "2******************************************************************"
iptables -t nat -A PREROUTING -p tcp --dport 53 -d $jy_ip/16 -j clash_dns
echo "3******************************************************************"
iptables -t nat -A PREROUTING -p udp --dport 53 -d $jy_ip/16 -j clash_dns
echo "4******************************************************************"
iptables -t nat -A PREROUTING -p tcp -j clash
echo "5******************************************************************"

iptables -t nat -A clash_dns -p udp --dport 53 -d $jy_ip/16 -j DNAT --to-destination $loc_ip:53
echo "6******************************************************************"
iptables -t nat -A clash_dns -p tcp --dport 53 -d $jy_ip/16 -j DNAT --to-destination $loc_ip:53
echo "7******************************************************************"
#注意：这里的网段和IP你需要自己适配自己的
iptables -t nat -A clash -d 0.0.0.0/8 -j RETURN
iptables -t nat -A clash -d 10.0.0.0/8 -j RETURN
iptables -t nat -A clash -d 127.0.0.0/8 -j RETURN
iptables -t nat -A clash -d 169.254.0.0/16 -j RETURN
iptables -t nat -A clash -d 172.16.0.0/12 -j RETURN
iptables -t nat -A clash -d 192.168.0.0/16 -j RETURN
iptables -t nat -A clash -d 224.0.0.0/4 -j RETURN
iptables -t nat -A clash -d 240.0.0.0/4 -j RETURN
echo "8******************************************************************"
# iptables -t nat -A clash -p tcp --dport 22 -d $loc_ip/24 -j ACCEPT
# -A PREROUTING -p tcp -m multiport --sports 443,3389,1194 -j RETURN
iptables -t nat -I PREROUTING -p tcp -m multiport --sports 443,1194,3128,3389,3690,5000,5001 -j RETURN
iptables -t nat -A clash -p tcp -j REDIRECT --to-ports 7892
echo "9******************************************************************"
iptables -t nat -A OUTPUT -p tcp -m owner ! --uid-owner clash -j REDIRECT --to-port 7892
echo "10******************************************************************"
netfilter-persistent save
echo "11******************************************************************"
netfilter-persistent start
echo "12******************************************************************"
iptables-save  > /etc/iptables/rules.v4
echo "13******************************************************************"
}


set_ip_dns(){

cat << EOF > /etc/network/interfaces
source /etc/network/interfaces.d/*

auto lo

auto  $ETH_N
iface $ETH_N inet static
  address $loc_ip
  netmask 255.255.255.0
  gateway $gate_ip
EOF

echo "14******************************************************************"
}

dt_menu() {
 Mainmenu=$(whiptail --clear --ok-button "确定" --backtitle "version:20200401v5" --title "灯塔客户端v4.1" --menu --nocancel "
**********************************************************************************
简介：灯塔客户端v4.1(最简单的安装 最简单的使用)
系统：Debian10
Youtube：米月、Unicom
电报群：https://t.me/mi_yue
Youtube频道地址：https://t.im/n21o
**********************************************************************************
请选择需要安装的内容：
    " 22 86 5\
        "1" " 安装灯塔客户端"\
        "2" " 退出" 3>&1 1>&2 2>&3)
    case $Mainmenu in
        1)
        dt_system_dep
        dt_input_trojan
        dt_smartdns
        dt_clash_trojan
        dt_iptables
        set_ip_dns
        whiptail --title "灯塔客户端安装成功" --msgbox "
*************************************************************************
灯塔客户端安装成功，把需要留学机器的网关和dns改成灯塔客户端ip。软路由请自行修改。

灯塔客户端IP：$loc_ip
Youtube：米月、Unicom
电报群：https://t.me/mi_yue
Youtube频道地址：https://t.im/n21o
灯塔web页面:http://$loc_ip:9090/ui/
DNS上游修改地址：/etc/smartdns/smartdns.conf
灯塔客户端配置文件地址：/home/clash/.config/clash/config.yaml
*************************************************************************" 18 78
        clear
        ;;
        2)
        #exit
        clear
        whiptail --title "脚本已退出" --msgbox "真希望把你留住" 8 78
        ;;
        esac
}

ETH_N=$(ip --oneline link show up | grep -v "lo" | awk '{print$2;exit}' | cut -d':' -f1 | cut -d'@' -f1)
GFW_LIST="https://storage.rinvay.co/Smartdns/gfw_domain.conf"
SM="https://storage.rinvay.co/Smartdns/smartdns.1.2020.02.25-2212.x86_64-debian-all.deb"
# CLS="https://storage.rinvay.co/Clash/clash-linux-amd64-v0.19.0.gz"
CLS="https://storage.rinvay.co/Clash/clashr-linux-amd64-v0.19.0.1.gz"
DASH="https://storage.rinvay.co/Clash/clash-dashboard-gh-pages.zip"
MMDB="https://storage.rinvay.co/Clash/Country.mmdb"

dt_menu
